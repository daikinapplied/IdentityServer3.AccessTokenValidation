# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# DotNetLib Open Source Azure Pipelines YAML script
# Developed by Hans Dickel (RecursiveGeek)
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
pool:
  name: WDT VM W10
  demands:
  - msbuild
  - visualstudio
  - vstest

trigger:
  batch: 'true'
  branches:
    include:
    - master
  
resources:
  repositories:
    - repository: templates
      type: github
      name: daikinapplied/IdentityServer3.AccessTokenValidation
      endpoint: daikinapplied # Azure DevOps service connection

variables:
  BuildNuGet: 5.8.1 # https://dist.nuget.org/tools.json
  BuildConfiguration: 'release'
  BuildPlatform: 'any cpu'
  BuildSolutions: '**\*.sln'
  BuildArtifactName: 'drop'
  BuildDebug: false
  AgentName: 'WDT VM W10' # 'name' option within a pool (Local Agent)
  #VmImageName: 'windows-latest' # vmImage' option within the pool (Azure Agent)

stages:
- stage: Build
  displayName: 'Build Stage'

  jobs:
  - job: Build
    displayName: 'Build'
    timeoutInMinutes: 30
    pool:
      name: $(AgentName)

    steps:
    - task: NuGetToolInstaller@1
      displayName: '[Use NuGet $(BuildNuGet)]'
      inputs:
        versionSpec: $(BuildNuGet)

    - task: NuGetCommand@2
      displayName: '[Restore NuGet Packages]'
      inputs:
        restoreSolution: '$(BuildSolutions)'

    - task: VSBuild@1
      displayName: '[Build Solution to Artifacts]'
      inputs:
        solution: '$(BuildSolutions)'
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(Build.ArtifactStagingDirectory)\\"'
        platform: '$(BuildPlatform)'
        configuration: '$(BuildConfiguration)'

    - task: PowerShell@2
      displayName: '[Build .NET Framework NuGet packages]'
      inputs:
        targetType: filePath
        filePath: '.\NuGetPackage.ps1'

    - task: PowerShell@2
      displayName: '[Stage Pipeline Artifacts]'
      inputs:
        filePath: '.\NuGetStage.ps1'
        arguments: '$(Build.ArtifactStagingDirectory)'

    # publishLocation: container, filePath
    - task: PublishBuildArtifacts@1
      displayName: '[Publish Artifacts to Releases]'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: '$(BuildArtifactName)'
        publishLocation: 'Container' 
      condition: succeededOrFailed()

- stage: Release
  displayName: 'Release PRD'
  dependsOn: Build
  condition: succeeded()

  jobs:
  - deployment: Deploy
    displayName: 'Deploy PRD'
    environment: 'IdentityServer3 AccessTokenValidation PRD'
    timeoutInMinutes: 30
    pool:
      name: $(AgentName)

    strategy:
      runOnce:
        deploy:
  
          steps:
          - task: AzureKeyVault@1
            displayName: '[Azure Key Vault: smit-enterprise-kv]'
            inputs:
              azureSubscription: 'smit-enterprise-devtest-azure-pipeline-arm'
              KeyVaultName: 'smit-enterprise-kv'
  
          - task: PowerShell@2
            displayName: '[NuGet.org publish]'
            inputs:
              targetType: filePath
              filePath: '$(System.DefaultWorkingDirectory)/NuGetPublish.ps1'
              arguments: '"$(daikinapplied-identityserver-nuget-apikey)" "$(daa-code-signing-subject)" "subject"'

# ~End~
